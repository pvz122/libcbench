#! /bin/bash

# list /opt/libcbench/glibc
available_versions=$(ls /opt/libcbench/glibc)

# if no arguments are passed, print usage
if [ -z "$1" ]; then
    echo "Usage: libcbench executable_path"
    echo "Available versions are:"
    echo $available_versions
    exit 0
fi

# make a copy of the executable
cp ${1} ${1}.libcbench
exe_path=$(realpath ${1}.libcbench)

# create log file
log_file=libcbench_$(date +%Y%m%d_%H%M%S).log
touch ${log_file}

# for each version, run `libcset executable_path version` and then run the executable
for version in $available_versions; do
    /opt/libcbench/libcset ${exe_path} ${version}

    now=$(date +%T\ %N)
    echo -e "\033[33m[$now] Running ${1} using glibc ${version}\033[0m" | tee -a ${log_file}

    ${exe_path} 2>&1 | tee -a ${log_file}

    now=$(date +%T\ %N)
    if [ $? -eq 0 ]; then
        echo -e "\033[32m[$now] Program exited with code $?\033[0m \n" | tee -a ${log_file}
    else
        echo -e "\033[31m[$now] Program exited with code $?\033[0m \n" | tee -a ${log_file}
    fi
done

# rm the copy of the executable
rm ${exe_path}

echo -e "\033[32mAll done, you can check the log file at ${log_file}\033[0m"
